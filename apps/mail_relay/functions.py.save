import smtplib
from email.mime.text import MIMEText
from .models import MailServer
from django.contrib.auth.models import User
from django.shortcuts import get_object_or_404


# This function send a mail from sender to targets [target1, target2] with subject and message 
def send_mail(sender, targets, subject, message):
    msg = MIMEText(message)
    msg["Subject"] = subject
    msg["From"] = sender
    msg["To"] = ", ".join(targets)

    server_data = MailServer.objects.filter(host = "mail.djong.me")[0]
    server = smtplib.SMTP_SSL(server_data.host, server_data.port)
    server.login(server_data.user, server_data.password)
    server.sendmail(sender, targets, msg.as_string())
    server.quit()

# Send an alert mail to the user of stock that the given stock has passed the alert mail 
# in case upper is true then the upper alert has been reached and lower alert otherwise
def send_alert_mail(stock, upper):
    user = get_object_or_404(User, username=stock.user)
    print("Sending alert mail to", user)
    if user.email == "":
        return
    targets = [user.email]
    print(targets)
    sender = "finance@dejong.lu"
    if upper:
        subject = "Climbing alert for %s" % stock.ticker
        message = "Hello %s\n\n This is an automatic alert for your %s stock.\n\n Your stock is climbing. The current price is given by %f, you have set an alert to %f\n\n" % (user.username, stock.ticker, round(stock.price_today, 2), round(stock.upper_alert, 2)) 

    else:
        subject = "Falling alert for %s" % stock.ticker
        message = "Hello %s\n\n This is an automatic alert for your %s stock.\n\n Your stock is falling. The current price is given by %f, you have set an alert to %f\n\n" % (user.username, stock.ticker, round(stock.price_today, 2), round(stock.lower_alert, 2)))
    send_mail(sender, targets, subject, message)
